from NAR_language import *

def Test1():
    print("//Test1:")
    TrainStart()
    processInput("<HUMAN --> [LEFT]>.")
    processInput("human is left")
    processInput("1")
    processInput("<HUMAN --> [RIGHT]>.")
    processInput("human is right")
    processInput("1")
    processInput("<HUMAN --> [FRONT]>.")
    processInput("human is front")
    processInput("1")
    processInput("<BOX --> [RIGHT]>.")
    processInput("box is right")
    processInput("1")
    processInput("<BALL --> [RIGHT]>.")
    processInput("ball is right")
    processInput("1")
    processInput("<BOX --> [LEFT]>.")
    processInput("box is left")
    processInput("1")
    processInput("<CAT --> [LEFT]>.")
    processInput("cat is to the left")
    processInput("1")
    processInput("<dog --> [RIGHT]>.")
    processInput("dog is to the right")
    processInput("1")
    TrainEnd()
    print(Query(f"<(human * ?1) --> R>", isRelation=False))
    #Output: ('<(human * HUMAN) --> R>', (1.0, 0.9642857142857143), [('?1', 'HUMAN')])
    print(Query(f"<(right * ?1) --> R>", isRelation=False))
    #Output: ('<(right * [RIGHT]) --> R>', (1.0, 0.9642857142857143), [('?1', '[RIGHT]')])
    print(Query(f"<(left * ?1) --> R>", isRelation=False))
    #Output: ('<(left * [LEFT]) --> R>', (1.0, 0.9473684210526316), [('?1', '[LEFT]')])
    processInput("the human is to the left")
    #Output: <HUMAN --> [LEFT]>. :|:
    processInput("the human is to the right")
    #Output: <HUMAN --> [RIGHT]>. :|:

def Test2():
    print("//Test2:")
    TrainStart()
    processInput("<HUMAN --> [LEFT]>.")
    processInput("left eser human")
    processInput("1")
    processInput("<HUMAN --> [RIGHT]>.")
    processInput("right eser human")
    processInput("1")
    processInput("<STONE --> [RIGHT]>.")
    processInput("right")
    processInput("1")
    processInput("<CAT --> [LEFT]>.")
    processInput("left eser cat")
    processInput("1")
    processInput("<HUMAN --> [RIGHT]>.")
    processInput("right eser human")
    processInput("1")
    TrainEnd()
    print(Query(f"<(human * ?1) --> R>", isRelation=False))
    #Output: ('<(human * HUMAN) --> R>', (1.0, 0.9642857142857143), [('?1', 'HUMAN')])
    print(Query(f"<(right * ?1) --> R>", isRelation=False))
    #Output: ('<(right * [RIGHT]) --> R>', (1.0, 0.9642857142857143), [('?1', '[RIGHT]')])
    print(Query(f"<(left * ?1) --> R>", isRelation=False))
    #Output: ('<(left * [LEFT]) --> R>', (1.0, 0.9473684210526316), [('?1', '[LEFT]')])
    processInput("left eser cat")
    processInput("right eser cat")

Test1()
processInput("*reset")
Test2()
